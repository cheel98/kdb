// source: knowledge_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('proto.knowledge_service.ChatRequest', null, global);
goog.exportSymbol('proto.knowledge_service.ChatResponse', null, global);
goog.exportSymbol('proto.knowledge_service.ConversationChatRequest', null, global);
goog.exportSymbol('proto.knowledge_service.ConversationHistoryRequest', null, global);
goog.exportSymbol('proto.knowledge_service.ConversationHistoryResponse', null, global);
goog.exportSymbol('proto.knowledge_service.ConversationResponse', null, global);
goog.exportSymbol('proto.knowledge_service.CreateConversationRequest', null, global);
goog.exportSymbol('proto.knowledge_service.DeleteConversationRequest', null, global);
goog.exportSymbol('proto.knowledge_service.DeleteConversationResponse', null, global);
goog.exportSymbol('proto.knowledge_service.EmailChatRequest', null, global);
goog.exportSymbol('proto.knowledge_service.EmailVerificationRequest', null, global);
goog.exportSymbol('proto.knowledge_service.EmailVerificationResponse', null, global);
goog.exportSymbol('proto.knowledge_service.FeedbackHistoryRequest', null, global);
goog.exportSymbol('proto.knowledge_service.FeedbackHistoryResponse', null, global);
goog.exportSymbol('proto.knowledge_service.FeedbackInfo', null, global);
goog.exportSymbol('proto.knowledge_service.FeedbackRecord', null, global);
goog.exportSymbol('proto.knowledge_service.FeedbackRequest', null, global);
goog.exportSymbol('proto.knowledge_service.FeedbackResponse', null, global);
goog.exportSymbol('proto.knowledge_service.FeedbackStats', null, global);
goog.exportSymbol('proto.knowledge_service.HealthCheckRequest', null, global);
goog.exportSymbol('proto.knowledge_service.HealthCheckResponse', null, global);
goog.exportSymbol('proto.knowledge_service.KnowledgeBaseStats', null, global);
goog.exportSymbol('proto.knowledge_service.ListConversationsRequest', null, global);
goog.exportSymbol('proto.knowledge_service.ListConversationsResponse', null, global);
goog.exportSymbol('proto.knowledge_service.Message', null, global);
goog.exportSymbol('proto.knowledge_service.SearchRequest', null, global);
goog.exportSymbol('proto.knowledge_service.SearchResponse', null, global);
goog.exportSymbol('proto.knowledge_service.SearchResult', null, global);
goog.exportSymbol('proto.knowledge_service.SimilarQuestion', null, global);
goog.exportSymbol('proto.knowledge_service.SourceDocument', null, global);
goog.exportSymbol('proto.knowledge_service.StatsRequest', null, global);
goog.exportSymbol('proto.knowledge_service.StatsResponse', null, global);
goog.exportSymbol('proto.knowledge_service.SystemConfig', null, global);
goog.exportSymbol('proto.knowledge_service.UpdateConversationRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.ChatRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.knowledge_service.ChatRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.ChatRequest.displayName = 'proto.knowledge_service.ChatRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.ConversationChatRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.knowledge_service.ConversationChatRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.ConversationChatRequest.displayName = 'proto.knowledge_service.ConversationChatRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.CreateConversationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.knowledge_service.CreateConversationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.CreateConversationRequest.displayName = 'proto.knowledge_service.CreateConversationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.ConversationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.knowledge_service.ConversationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.ConversationResponse.displayName = 'proto.knowledge_service.ConversationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.ConversationHistoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.knowledge_service.ConversationHistoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.ConversationHistoryRequest.displayName = 'proto.knowledge_service.ConversationHistoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.Message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.knowledge_service.Message.repeatedFields_, null);
};
goog.inherits(proto.knowledge_service.Message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.Message.displayName = 'proto.knowledge_service.Message';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.ConversationHistoryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.knowledge_service.ConversationHistoryResponse.repeatedFields_, null);
};
goog.inherits(proto.knowledge_service.ConversationHistoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.ConversationHistoryResponse.displayName = 'proto.knowledge_service.ConversationHistoryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.ListConversationsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.knowledge_service.ListConversationsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.ListConversationsRequest.displayName = 'proto.knowledge_service.ListConversationsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.ListConversationsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.knowledge_service.ListConversationsResponse.repeatedFields_, null);
};
goog.inherits(proto.knowledge_service.ListConversationsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.ListConversationsResponse.displayName = 'proto.knowledge_service.ListConversationsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.UpdateConversationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.knowledge_service.UpdateConversationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.UpdateConversationRequest.displayName = 'proto.knowledge_service.UpdateConversationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.DeleteConversationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.knowledge_service.DeleteConversationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.DeleteConversationRequest.displayName = 'proto.knowledge_service.DeleteConversationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.DeleteConversationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.knowledge_service.DeleteConversationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.DeleteConversationResponse.displayName = 'proto.knowledge_service.DeleteConversationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.ChatResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.knowledge_service.ChatResponse.repeatedFields_, null);
};
goog.inherits(proto.knowledge_service.ChatResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.ChatResponse.displayName = 'proto.knowledge_service.ChatResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.SourceDocument = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.knowledge_service.SourceDocument, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.SourceDocument.displayName = 'proto.knowledge_service.SourceDocument';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.FeedbackInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.knowledge_service.FeedbackInfo.repeatedFields_, null);
};
goog.inherits(proto.knowledge_service.FeedbackInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.FeedbackInfo.displayName = 'proto.knowledge_service.FeedbackInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.SimilarQuestion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.knowledge_service.SimilarQuestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.SimilarQuestion.displayName = 'proto.knowledge_service.SimilarQuestion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.FeedbackRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.knowledge_service.FeedbackRequest.repeatedFields_, null);
};
goog.inherits(proto.knowledge_service.FeedbackRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.FeedbackRequest.displayName = 'proto.knowledge_service.FeedbackRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.FeedbackResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.knowledge_service.FeedbackResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.FeedbackResponse.displayName = 'proto.knowledge_service.FeedbackResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.FeedbackHistoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.knowledge_service.FeedbackHistoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.FeedbackHistoryRequest.displayName = 'proto.knowledge_service.FeedbackHistoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.FeedbackHistoryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.knowledge_service.FeedbackHistoryResponse.repeatedFields_, null);
};
goog.inherits(proto.knowledge_service.FeedbackHistoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.FeedbackHistoryResponse.displayName = 'proto.knowledge_service.FeedbackHistoryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.FeedbackRecord = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.knowledge_service.FeedbackRecord.repeatedFields_, null);
};
goog.inherits(proto.knowledge_service.FeedbackRecord, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.FeedbackRecord.displayName = 'proto.knowledge_service.FeedbackRecord';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.StatsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.knowledge_service.StatsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.StatsRequest.displayName = 'proto.knowledge_service.StatsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.StatsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.knowledge_service.StatsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.StatsResponse.displayName = 'proto.knowledge_service.StatsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.KnowledgeBaseStats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.knowledge_service.KnowledgeBaseStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.KnowledgeBaseStats.displayName = 'proto.knowledge_service.KnowledgeBaseStats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.FeedbackStats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.knowledge_service.FeedbackStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.FeedbackStats.displayName = 'proto.knowledge_service.FeedbackStats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.SystemConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.knowledge_service.SystemConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.SystemConfig.displayName = 'proto.knowledge_service.SystemConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.SearchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.knowledge_service.SearchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.SearchRequest.displayName = 'proto.knowledge_service.SearchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.SearchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.knowledge_service.SearchResponse.repeatedFields_, null);
};
goog.inherits(proto.knowledge_service.SearchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.SearchResponse.displayName = 'proto.knowledge_service.SearchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.SearchResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.knowledge_service.SearchResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.SearchResult.displayName = 'proto.knowledge_service.SearchResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.HealthCheckRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.knowledge_service.HealthCheckRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.HealthCheckRequest.displayName = 'proto.knowledge_service.HealthCheckRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.HealthCheckResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.knowledge_service.HealthCheckResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.HealthCheckResponse.displayName = 'proto.knowledge_service.HealthCheckResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.EmailVerificationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.knowledge_service.EmailVerificationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.EmailVerificationRequest.displayName = 'proto.knowledge_service.EmailVerificationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.EmailVerificationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.knowledge_service.EmailVerificationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.EmailVerificationResponse.displayName = 'proto.knowledge_service.EmailVerificationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.knowledge_service.EmailChatRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.knowledge_service.EmailChatRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.knowledge_service.EmailChatRequest.displayName = 'proto.knowledge_service.EmailChatRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.ChatRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.ChatRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.ChatRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.ChatRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    question: jspb.Message.getFieldWithDefault(msg, 1, ""),
    useFeedback: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.ChatRequest}
 */
proto.knowledge_service.ChatRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.ChatRequest;
  return proto.knowledge_service.ChatRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.ChatRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.ChatRequest}
 */
proto.knowledge_service.ChatRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseFeedback(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.ChatRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.ChatRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.ChatRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.ChatRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUseFeedback();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string question = 1;
 * @return {string}
 */
proto.knowledge_service.ChatRequest.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.ChatRequest} returns this
 */
proto.knowledge_service.ChatRequest.prototype.setQuestion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool use_feedback = 2;
 * @return {boolean}
 */
proto.knowledge_service.ChatRequest.prototype.getUseFeedback = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.knowledge_service.ChatRequest} returns this
 */
proto.knowledge_service.ChatRequest.prototype.setUseFeedback = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.ConversationChatRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.ConversationChatRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.ConversationChatRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.ConversationChatRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    question: jspb.Message.getFieldWithDefault(msg, 1, ""),
    conversationId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    useFeedback: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    useReranking: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    topK: jspb.Message.getFieldWithDefault(msg, 5, 0),
    similarityThreshold: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    systemConfig: (f = msg.getSystemConfig()) && proto.knowledge_service.SystemConfig.toObject(includeInstance, f),
    maxHistoryTurns: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.ConversationChatRequest}
 */
proto.knowledge_service.ConversationChatRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.ConversationChatRequest;
  return proto.knowledge_service.ConversationChatRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.ConversationChatRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.ConversationChatRequest}
 */
proto.knowledge_service.ConversationChatRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConversationId(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseFeedback(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseReranking(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTopK(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSimilarityThreshold(value);
      break;
    case 7:
      var value = new proto.knowledge_service.SystemConfig;
      reader.readMessage(value,proto.knowledge_service.SystemConfig.deserializeBinaryFromReader);
      msg.setSystemConfig(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxHistoryTurns(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.ConversationChatRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.ConversationChatRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.ConversationChatRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.ConversationChatRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConversationId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUseFeedback();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getUseReranking();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getTopK();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getSimilarityThreshold();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getSystemConfig();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.knowledge_service.SystemConfig.serializeBinaryToWriter
    );
  }
  f = message.getMaxHistoryTurns();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
};


/**
 * optional string question = 1;
 * @return {string}
 */
proto.knowledge_service.ConversationChatRequest.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.ConversationChatRequest} returns this
 */
proto.knowledge_service.ConversationChatRequest.prototype.setQuestion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string conversation_id = 2;
 * @return {string}
 */
proto.knowledge_service.ConversationChatRequest.prototype.getConversationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.ConversationChatRequest} returns this
 */
proto.knowledge_service.ConversationChatRequest.prototype.setConversationId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool use_feedback = 3;
 * @return {boolean}
 */
proto.knowledge_service.ConversationChatRequest.prototype.getUseFeedback = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.knowledge_service.ConversationChatRequest} returns this
 */
proto.knowledge_service.ConversationChatRequest.prototype.setUseFeedback = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool use_reranking = 4;
 * @return {boolean}
 */
proto.knowledge_service.ConversationChatRequest.prototype.getUseReranking = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.knowledge_service.ConversationChatRequest} returns this
 */
proto.knowledge_service.ConversationChatRequest.prototype.setUseReranking = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional int32 top_k = 5;
 * @return {number}
 */
proto.knowledge_service.ConversationChatRequest.prototype.getTopK = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.knowledge_service.ConversationChatRequest} returns this
 */
proto.knowledge_service.ConversationChatRequest.prototype.setTopK = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional float similarity_threshold = 6;
 * @return {number}
 */
proto.knowledge_service.ConversationChatRequest.prototype.getSimilarityThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.knowledge_service.ConversationChatRequest} returns this
 */
proto.knowledge_service.ConversationChatRequest.prototype.setSimilarityThreshold = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional SystemConfig system_config = 7;
 * @return {?proto.knowledge_service.SystemConfig}
 */
proto.knowledge_service.ConversationChatRequest.prototype.getSystemConfig = function() {
  return /** @type{?proto.knowledge_service.SystemConfig} */ (
    jspb.Message.getWrapperField(this, proto.knowledge_service.SystemConfig, 7));
};


/**
 * @param {?proto.knowledge_service.SystemConfig|undefined} value
 * @return {!proto.knowledge_service.ConversationChatRequest} returns this
*/
proto.knowledge_service.ConversationChatRequest.prototype.setSystemConfig = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.knowledge_service.ConversationChatRequest} returns this
 */
proto.knowledge_service.ConversationChatRequest.prototype.clearSystemConfig = function() {
  return this.setSystemConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.knowledge_service.ConversationChatRequest.prototype.hasSystemConfig = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int32 max_history_turns = 8;
 * @return {number}
 */
proto.knowledge_service.ConversationChatRequest.prototype.getMaxHistoryTurns = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.knowledge_service.ConversationChatRequest} returns this
 */
proto.knowledge_service.ConversationChatRequest.prototype.setMaxHistoryTurns = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.CreateConversationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.CreateConversationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.CreateConversationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.CreateConversationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.CreateConversationRequest}
 */
proto.knowledge_service.CreateConversationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.CreateConversationRequest;
  return proto.knowledge_service.CreateConversationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.CreateConversationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.CreateConversationRequest}
 */
proto.knowledge_service.CreateConversationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.CreateConversationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.CreateConversationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.CreateConversationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.CreateConversationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.knowledge_service.CreateConversationRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.CreateConversationRequest} returns this
 */
proto.knowledge_service.CreateConversationRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.knowledge_service.CreateConversationRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.CreateConversationRequest} returns this
 */
proto.knowledge_service.CreateConversationRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.ConversationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.ConversationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.ConversationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.ConversationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    conversationId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 4, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 5, ""),
    isArchived: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.ConversationResponse}
 */
proto.knowledge_service.ConversationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.ConversationResponse;
  return proto.knowledge_service.ConversationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.ConversationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.ConversationResponse}
 */
proto.knowledge_service.ConversationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConversationId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsArchived(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.ConversationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.ConversationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.ConversationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.ConversationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConversationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIsArchived();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string conversation_id = 1;
 * @return {string}
 */
proto.knowledge_service.ConversationResponse.prototype.getConversationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.ConversationResponse} returns this
 */
proto.knowledge_service.ConversationResponse.prototype.setConversationId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.knowledge_service.ConversationResponse.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.ConversationResponse} returns this
 */
proto.knowledge_service.ConversationResponse.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string user_id = 3;
 * @return {string}
 */
proto.knowledge_service.ConversationResponse.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.ConversationResponse} returns this
 */
proto.knowledge_service.ConversationResponse.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string created_at = 4;
 * @return {string}
 */
proto.knowledge_service.ConversationResponse.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.ConversationResponse} returns this
 */
proto.knowledge_service.ConversationResponse.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string updated_at = 5;
 * @return {string}
 */
proto.knowledge_service.ConversationResponse.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.ConversationResponse} returns this
 */
proto.knowledge_service.ConversationResponse.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool is_archived = 6;
 * @return {boolean}
 */
proto.knowledge_service.ConversationResponse.prototype.getIsArchived = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.knowledge_service.ConversationResponse} returns this
 */
proto.knowledge_service.ConversationResponse.prototype.setIsArchived = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.ConversationHistoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.ConversationHistoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.ConversationHistoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.ConversationHistoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    conversationId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.ConversationHistoryRequest}
 */
proto.knowledge_service.ConversationHistoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.ConversationHistoryRequest;
  return proto.knowledge_service.ConversationHistoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.ConversationHistoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.ConversationHistoryRequest}
 */
proto.knowledge_service.ConversationHistoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConversationId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.ConversationHistoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.ConversationHistoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.ConversationHistoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.ConversationHistoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConversationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string conversation_id = 1;
 * @return {string}
 */
proto.knowledge_service.ConversationHistoryRequest.prototype.getConversationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.ConversationHistoryRequest} returns this
 */
proto.knowledge_service.ConversationHistoryRequest.prototype.setConversationId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 limit = 2;
 * @return {number}
 */
proto.knowledge_service.ConversationHistoryRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.knowledge_service.ConversationHistoryRequest} returns this
 */
proto.knowledge_service.ConversationHistoryRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 offset = 3;
 * @return {number}
 */
proto.knowledge_service.ConversationHistoryRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.knowledge_service.ConversationHistoryRequest} returns this
 */
proto.knowledge_service.ConversationHistoryRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.knowledge_service.Message.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.Message.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.Message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.Message} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.Message.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    conversationId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    content: jspb.Message.getFieldWithDefault(msg, 3, ""),
    role: jspb.Message.getFieldWithDefault(msg, 4, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 5, ""),
    sourceDocumentsList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.Message}
 */
proto.knowledge_service.Message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.Message;
  return proto.knowledge_service.Message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.Message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.Message}
 */
proto.knowledge_service.Message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConversationId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addSourceDocuments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.Message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.Message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.Message} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.Message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConversationId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSourceDocumentsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
};


/**
 * optional string message_id = 1;
 * @return {string}
 */
proto.knowledge_service.Message.prototype.getMessageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.Message} returns this
 */
proto.knowledge_service.Message.prototype.setMessageId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string conversation_id = 2;
 * @return {string}
 */
proto.knowledge_service.Message.prototype.getConversationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.Message} returns this
 */
proto.knowledge_service.Message.prototype.setConversationId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string content = 3;
 * @return {string}
 */
proto.knowledge_service.Message.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.Message} returns this
 */
proto.knowledge_service.Message.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string role = 4;
 * @return {string}
 */
proto.knowledge_service.Message.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.Message} returns this
 */
proto.knowledge_service.Message.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string created_at = 5;
 * @return {string}
 */
proto.knowledge_service.Message.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.Message} returns this
 */
proto.knowledge_service.Message.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated string source_documents = 6;
 * @return {!Array<string>}
 */
proto.knowledge_service.Message.prototype.getSourceDocumentsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.knowledge_service.Message} returns this
 */
proto.knowledge_service.Message.prototype.setSourceDocumentsList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.knowledge_service.Message} returns this
 */
proto.knowledge_service.Message.prototype.addSourceDocuments = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.knowledge_service.Message} returns this
 */
proto.knowledge_service.Message.prototype.clearSourceDocumentsList = function() {
  return this.setSourceDocumentsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.knowledge_service.ConversationHistoryResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.ConversationHistoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.ConversationHistoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.ConversationHistoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.ConversationHistoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    conversationId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    messagesList: jspb.Message.toObjectList(msg.getMessagesList(),
    proto.knowledge_service.Message.toObject, includeInstance),
    totalCount: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.ConversationHistoryResponse}
 */
proto.knowledge_service.ConversationHistoryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.ConversationHistoryResponse;
  return proto.knowledge_service.ConversationHistoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.ConversationHistoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.ConversationHistoryResponse}
 */
proto.knowledge_service.ConversationHistoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConversationId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = new proto.knowledge_service.Message;
      reader.readMessage(value,proto.knowledge_service.Message.deserializeBinaryFromReader);
      msg.addMessages(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.ConversationHistoryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.ConversationHistoryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.ConversationHistoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.ConversationHistoryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConversationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMessagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.knowledge_service.Message.serializeBinaryToWriter
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional string conversation_id = 1;
 * @return {string}
 */
proto.knowledge_service.ConversationHistoryResponse.prototype.getConversationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.ConversationHistoryResponse} returns this
 */
proto.knowledge_service.ConversationHistoryResponse.prototype.setConversationId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.knowledge_service.ConversationHistoryResponse.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.ConversationHistoryResponse} returns this
 */
proto.knowledge_service.ConversationHistoryResponse.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Message messages = 3;
 * @return {!Array<!proto.knowledge_service.Message>}
 */
proto.knowledge_service.ConversationHistoryResponse.prototype.getMessagesList = function() {
  return /** @type{!Array<!proto.knowledge_service.Message>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.knowledge_service.Message, 3));
};


/**
 * @param {!Array<!proto.knowledge_service.Message>} value
 * @return {!proto.knowledge_service.ConversationHistoryResponse} returns this
*/
proto.knowledge_service.ConversationHistoryResponse.prototype.setMessagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.knowledge_service.Message=} opt_value
 * @param {number=} opt_index
 * @return {!proto.knowledge_service.Message}
 */
proto.knowledge_service.ConversationHistoryResponse.prototype.addMessages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.knowledge_service.Message, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.knowledge_service.ConversationHistoryResponse} returns this
 */
proto.knowledge_service.ConversationHistoryResponse.prototype.clearMessagesList = function() {
  return this.setMessagesList([]);
};


/**
 * optional int32 total_count = 4;
 * @return {number}
 */
proto.knowledge_service.ConversationHistoryResponse.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.knowledge_service.ConversationHistoryResponse} returns this
 */
proto.knowledge_service.ConversationHistoryResponse.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.ListConversationsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.ListConversationsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.ListConversationsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.ListConversationsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 3, 0),
    includeArchived: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.ListConversationsRequest}
 */
proto.knowledge_service.ListConversationsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.ListConversationsRequest;
  return proto.knowledge_service.ListConversationsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.ListConversationsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.ListConversationsRequest}
 */
proto.knowledge_service.ListConversationsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeArchived(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.ListConversationsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.ListConversationsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.ListConversationsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.ListConversationsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getIncludeArchived();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.knowledge_service.ListConversationsRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.ListConversationsRequest} returns this
 */
proto.knowledge_service.ListConversationsRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 limit = 2;
 * @return {number}
 */
proto.knowledge_service.ListConversationsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.knowledge_service.ListConversationsRequest} returns this
 */
proto.knowledge_service.ListConversationsRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 offset = 3;
 * @return {number}
 */
proto.knowledge_service.ListConversationsRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.knowledge_service.ListConversationsRequest} returns this
 */
proto.knowledge_service.ListConversationsRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool include_archived = 4;
 * @return {boolean}
 */
proto.knowledge_service.ListConversationsRequest.prototype.getIncludeArchived = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.knowledge_service.ListConversationsRequest} returns this
 */
proto.knowledge_service.ListConversationsRequest.prototype.setIncludeArchived = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.knowledge_service.ListConversationsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.ListConversationsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.ListConversationsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.ListConversationsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.ListConversationsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    conversationsList: jspb.Message.toObjectList(msg.getConversationsList(),
    proto.knowledge_service.ConversationResponse.toObject, includeInstance),
    totalCount: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.ListConversationsResponse}
 */
proto.knowledge_service.ListConversationsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.ListConversationsResponse;
  return proto.knowledge_service.ListConversationsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.ListConversationsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.ListConversationsResponse}
 */
proto.knowledge_service.ListConversationsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.knowledge_service.ConversationResponse;
      reader.readMessage(value,proto.knowledge_service.ConversationResponse.deserializeBinaryFromReader);
      msg.addConversations(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.ListConversationsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.ListConversationsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.ListConversationsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.ListConversationsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConversationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.knowledge_service.ConversationResponse.serializeBinaryToWriter
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * repeated ConversationResponse conversations = 1;
 * @return {!Array<!proto.knowledge_service.ConversationResponse>}
 */
proto.knowledge_service.ListConversationsResponse.prototype.getConversationsList = function() {
  return /** @type{!Array<!proto.knowledge_service.ConversationResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.knowledge_service.ConversationResponse, 1));
};


/**
 * @param {!Array<!proto.knowledge_service.ConversationResponse>} value
 * @return {!proto.knowledge_service.ListConversationsResponse} returns this
*/
proto.knowledge_service.ListConversationsResponse.prototype.setConversationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.knowledge_service.ConversationResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.knowledge_service.ConversationResponse}
 */
proto.knowledge_service.ListConversationsResponse.prototype.addConversations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.knowledge_service.ConversationResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.knowledge_service.ListConversationsResponse} returns this
 */
proto.knowledge_service.ListConversationsResponse.prototype.clearConversationsList = function() {
  return this.setConversationsList([]);
};


/**
 * optional int32 total_count = 2;
 * @return {number}
 */
proto.knowledge_service.ListConversationsResponse.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.knowledge_service.ListConversationsResponse} returns this
 */
proto.knowledge_service.ListConversationsResponse.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.UpdateConversationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.UpdateConversationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.UpdateConversationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.UpdateConversationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    conversationId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    isArchived: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.UpdateConversationRequest}
 */
proto.knowledge_service.UpdateConversationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.UpdateConversationRequest;
  return proto.knowledge_service.UpdateConversationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.UpdateConversationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.UpdateConversationRequest}
 */
proto.knowledge_service.UpdateConversationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConversationId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsArchived(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.UpdateConversationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.UpdateConversationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.UpdateConversationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.UpdateConversationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConversationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIsArchived();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string conversation_id = 1;
 * @return {string}
 */
proto.knowledge_service.UpdateConversationRequest.prototype.getConversationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.UpdateConversationRequest} returns this
 */
proto.knowledge_service.UpdateConversationRequest.prototype.setConversationId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.knowledge_service.UpdateConversationRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.UpdateConversationRequest} returns this
 */
proto.knowledge_service.UpdateConversationRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool is_archived = 3;
 * @return {boolean}
 */
proto.knowledge_service.UpdateConversationRequest.prototype.getIsArchived = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.knowledge_service.UpdateConversationRequest} returns this
 */
proto.knowledge_service.UpdateConversationRequest.prototype.setIsArchived = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.DeleteConversationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.DeleteConversationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.DeleteConversationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.DeleteConversationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    conversationId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.DeleteConversationRequest}
 */
proto.knowledge_service.DeleteConversationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.DeleteConversationRequest;
  return proto.knowledge_service.DeleteConversationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.DeleteConversationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.DeleteConversationRequest}
 */
proto.knowledge_service.DeleteConversationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConversationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.DeleteConversationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.DeleteConversationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.DeleteConversationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.DeleteConversationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConversationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string conversation_id = 1;
 * @return {string}
 */
proto.knowledge_service.DeleteConversationRequest.prototype.getConversationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.DeleteConversationRequest} returns this
 */
proto.knowledge_service.DeleteConversationRequest.prototype.setConversationId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.DeleteConversationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.DeleteConversationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.DeleteConversationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.DeleteConversationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.DeleteConversationResponse}
 */
proto.knowledge_service.DeleteConversationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.DeleteConversationResponse;
  return proto.knowledge_service.DeleteConversationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.DeleteConversationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.DeleteConversationResponse}
 */
proto.knowledge_service.DeleteConversationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.DeleteConversationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.DeleteConversationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.DeleteConversationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.DeleteConversationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.knowledge_service.DeleteConversationResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.knowledge_service.DeleteConversationResponse} returns this
 */
proto.knowledge_service.DeleteConversationResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.knowledge_service.ChatResponse.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.ChatResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.ChatResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.ChatResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.ChatResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    question: jspb.Message.getFieldWithDefault(msg, 1, ""),
    originalAnswer: jspb.Message.getFieldWithDefault(msg, 2, ""),
    finalAnswer: jspb.Message.getFieldWithDefault(msg, 3, ""),
    sourceDocumentsList: jspb.Message.toObjectList(msg.getSourceDocumentsList(),
    proto.knowledge_service.SourceDocument.toObject, includeInstance),
    feedbackInfo: (f = msg.getFeedbackInfo()) && proto.knowledge_service.FeedbackInfo.toObject(includeInstance, f),
    success: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    errorMessage: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.ChatResponse}
 */
proto.knowledge_service.ChatResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.ChatResponse;
  return proto.knowledge_service.ChatResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.ChatResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.ChatResponse}
 */
proto.knowledge_service.ChatResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginalAnswer(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFinalAnswer(value);
      break;
    case 4:
      var value = new proto.knowledge_service.SourceDocument;
      reader.readMessage(value,proto.knowledge_service.SourceDocument.deserializeBinaryFromReader);
      msg.addSourceDocuments(value);
      break;
    case 5:
      var value = new proto.knowledge_service.FeedbackInfo;
      reader.readMessage(value,proto.knowledge_service.FeedbackInfo.deserializeBinaryFromReader);
      msg.setFeedbackInfo(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.ChatResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.ChatResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.ChatResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.ChatResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOriginalAnswer();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFinalAnswer();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSourceDocumentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.knowledge_service.SourceDocument.serializeBinaryToWriter
    );
  }
  f = message.getFeedbackInfo();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.knowledge_service.FeedbackInfo.serializeBinaryToWriter
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string question = 1;
 * @return {string}
 */
proto.knowledge_service.ChatResponse.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.ChatResponse} returns this
 */
proto.knowledge_service.ChatResponse.prototype.setQuestion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string original_answer = 2;
 * @return {string}
 */
proto.knowledge_service.ChatResponse.prototype.getOriginalAnswer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.ChatResponse} returns this
 */
proto.knowledge_service.ChatResponse.prototype.setOriginalAnswer = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string final_answer = 3;
 * @return {string}
 */
proto.knowledge_service.ChatResponse.prototype.getFinalAnswer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.ChatResponse} returns this
 */
proto.knowledge_service.ChatResponse.prototype.setFinalAnswer = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated SourceDocument source_documents = 4;
 * @return {!Array<!proto.knowledge_service.SourceDocument>}
 */
proto.knowledge_service.ChatResponse.prototype.getSourceDocumentsList = function() {
  return /** @type{!Array<!proto.knowledge_service.SourceDocument>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.knowledge_service.SourceDocument, 4));
};


/**
 * @param {!Array<!proto.knowledge_service.SourceDocument>} value
 * @return {!proto.knowledge_service.ChatResponse} returns this
*/
proto.knowledge_service.ChatResponse.prototype.setSourceDocumentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.knowledge_service.SourceDocument=} opt_value
 * @param {number=} opt_index
 * @return {!proto.knowledge_service.SourceDocument}
 */
proto.knowledge_service.ChatResponse.prototype.addSourceDocuments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.knowledge_service.SourceDocument, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.knowledge_service.ChatResponse} returns this
 */
proto.knowledge_service.ChatResponse.prototype.clearSourceDocumentsList = function() {
  return this.setSourceDocumentsList([]);
};


/**
 * optional FeedbackInfo feedback_info = 5;
 * @return {?proto.knowledge_service.FeedbackInfo}
 */
proto.knowledge_service.ChatResponse.prototype.getFeedbackInfo = function() {
  return /** @type{?proto.knowledge_service.FeedbackInfo} */ (
    jspb.Message.getWrapperField(this, proto.knowledge_service.FeedbackInfo, 5));
};


/**
 * @param {?proto.knowledge_service.FeedbackInfo|undefined} value
 * @return {!proto.knowledge_service.ChatResponse} returns this
*/
proto.knowledge_service.ChatResponse.prototype.setFeedbackInfo = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.knowledge_service.ChatResponse} returns this
 */
proto.knowledge_service.ChatResponse.prototype.clearFeedbackInfo = function() {
  return this.setFeedbackInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.knowledge_service.ChatResponse.prototype.hasFeedbackInfo = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool success = 6;
 * @return {boolean}
 */
proto.knowledge_service.ChatResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.knowledge_service.ChatResponse} returns this
 */
proto.knowledge_service.ChatResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string error_message = 7;
 * @return {string}
 */
proto.knowledge_service.ChatResponse.prototype.getErrorMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.ChatResponse} returns this
 */
proto.knowledge_service.ChatResponse.prototype.setErrorMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.SourceDocument.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.SourceDocument.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.SourceDocument} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.SourceDocument.toObject = function(includeInstance, msg) {
  var f, obj = {
    content: jspb.Message.getFieldWithDefault(msg, 1, ""),
    source: jspb.Message.getFieldWithDefault(msg, 2, ""),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.SourceDocument}
 */
proto.knowledge_service.SourceDocument.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.SourceDocument;
  return proto.knowledge_service.SourceDocument.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.SourceDocument} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.SourceDocument}
 */
proto.knowledge_service.SourceDocument.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 3:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.SourceDocument.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.SourceDocument.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.SourceDocument} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.SourceDocument.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string content = 1;
 * @return {string}
 */
proto.knowledge_service.SourceDocument.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.SourceDocument} returns this
 */
proto.knowledge_service.SourceDocument.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.knowledge_service.SourceDocument.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.SourceDocument} returns this
 */
proto.knowledge_service.SourceDocument.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, string> metadata = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.knowledge_service.SourceDocument.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.knowledge_service.SourceDocument} returns this
 */
proto.knowledge_service.SourceDocument.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.knowledge_service.FeedbackInfo.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.FeedbackInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.FeedbackInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.FeedbackInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.FeedbackInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    isImproved: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    confidenceScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    feedbackCount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    similarQuestionsList: jspb.Message.toObjectList(msg.getSimilarQuestionsList(),
    proto.knowledge_service.SimilarQuestion.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.FeedbackInfo}
 */
proto.knowledge_service.FeedbackInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.FeedbackInfo;
  return proto.knowledge_service.FeedbackInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.FeedbackInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.FeedbackInfo}
 */
proto.knowledge_service.FeedbackInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsImproved(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setConfidenceScore(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFeedbackCount(value);
      break;
    case 4:
      var value = new proto.knowledge_service.SimilarQuestion;
      reader.readMessage(value,proto.knowledge_service.SimilarQuestion.deserializeBinaryFromReader);
      msg.addSimilarQuestions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.FeedbackInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.FeedbackInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.FeedbackInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.FeedbackInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsImproved();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getConfidenceScore();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getFeedbackCount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getSimilarQuestionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.knowledge_service.SimilarQuestion.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool is_improved = 1;
 * @return {boolean}
 */
proto.knowledge_service.FeedbackInfo.prototype.getIsImproved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.knowledge_service.FeedbackInfo} returns this
 */
proto.knowledge_service.FeedbackInfo.prototype.setIsImproved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional double confidence_score = 2;
 * @return {number}
 */
proto.knowledge_service.FeedbackInfo.prototype.getConfidenceScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.knowledge_service.FeedbackInfo} returns this
 */
proto.knowledge_service.FeedbackInfo.prototype.setConfidenceScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional int32 feedback_count = 3;
 * @return {number}
 */
proto.knowledge_service.FeedbackInfo.prototype.getFeedbackCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.knowledge_service.FeedbackInfo} returns this
 */
proto.knowledge_service.FeedbackInfo.prototype.setFeedbackCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated SimilarQuestion similar_questions = 4;
 * @return {!Array<!proto.knowledge_service.SimilarQuestion>}
 */
proto.knowledge_service.FeedbackInfo.prototype.getSimilarQuestionsList = function() {
  return /** @type{!Array<!proto.knowledge_service.SimilarQuestion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.knowledge_service.SimilarQuestion, 4));
};


/**
 * @param {!Array<!proto.knowledge_service.SimilarQuestion>} value
 * @return {!proto.knowledge_service.FeedbackInfo} returns this
*/
proto.knowledge_service.FeedbackInfo.prototype.setSimilarQuestionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.knowledge_service.SimilarQuestion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.knowledge_service.SimilarQuestion}
 */
proto.knowledge_service.FeedbackInfo.prototype.addSimilarQuestions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.knowledge_service.SimilarQuestion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.knowledge_service.FeedbackInfo} returns this
 */
proto.knowledge_service.FeedbackInfo.prototype.clearSimilarQuestionsList = function() {
  return this.setSimilarQuestionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.SimilarQuestion.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.SimilarQuestion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.SimilarQuestion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.SimilarQuestion.toObject = function(includeInstance, msg) {
  var f, obj = {
    question: jspb.Message.getFieldWithDefault(msg, 1, ""),
    similarityScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    feedbackType: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.SimilarQuestion}
 */
proto.knowledge_service.SimilarQuestion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.SimilarQuestion;
  return proto.knowledge_service.SimilarQuestion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.SimilarQuestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.SimilarQuestion}
 */
proto.knowledge_service.SimilarQuestion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSimilarityScore(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeedbackType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.SimilarQuestion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.SimilarQuestion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.SimilarQuestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.SimilarQuestion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSimilarityScore();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getFeedbackType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string question = 1;
 * @return {string}
 */
proto.knowledge_service.SimilarQuestion.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.SimilarQuestion} returns this
 */
proto.knowledge_service.SimilarQuestion.prototype.setQuestion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double similarity_score = 2;
 * @return {number}
 */
proto.knowledge_service.SimilarQuestion.prototype.getSimilarityScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.knowledge_service.SimilarQuestion} returns this
 */
proto.knowledge_service.SimilarQuestion.prototype.setSimilarityScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional string feedback_type = 3;
 * @return {string}
 */
proto.knowledge_service.SimilarQuestion.prototype.getFeedbackType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.SimilarQuestion} returns this
 */
proto.knowledge_service.SimilarQuestion.prototype.setFeedbackType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.knowledge_service.FeedbackRequest.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.FeedbackRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.FeedbackRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.FeedbackRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.FeedbackRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    question: jspb.Message.getFieldWithDefault(msg, 1, ""),
    originalAnswer: jspb.Message.getFieldWithDefault(msg, 2, ""),
    feedbackType: jspb.Message.getFieldWithDefault(msg, 3, ""),
    correctedAnswer: jspb.Message.getFieldWithDefault(msg, 4, ""),
    feedbackText: jspb.Message.getFieldWithDefault(msg, 5, ""),
    sourceDocumentsList: jspb.Message.toObjectList(msg.getSourceDocumentsList(),
    proto.knowledge_service.SourceDocument.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.FeedbackRequest}
 */
proto.knowledge_service.FeedbackRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.FeedbackRequest;
  return proto.knowledge_service.FeedbackRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.FeedbackRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.FeedbackRequest}
 */
proto.knowledge_service.FeedbackRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginalAnswer(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeedbackType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCorrectedAnswer(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeedbackText(value);
      break;
    case 6:
      var value = new proto.knowledge_service.SourceDocument;
      reader.readMessage(value,proto.knowledge_service.SourceDocument.deserializeBinaryFromReader);
      msg.addSourceDocuments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.FeedbackRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.FeedbackRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.FeedbackRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.FeedbackRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOriginalAnswer();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFeedbackType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCorrectedAnswer();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFeedbackText();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSourceDocumentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.knowledge_service.SourceDocument.serializeBinaryToWriter
    );
  }
};


/**
 * optional string question = 1;
 * @return {string}
 */
proto.knowledge_service.FeedbackRequest.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.FeedbackRequest} returns this
 */
proto.knowledge_service.FeedbackRequest.prototype.setQuestion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string original_answer = 2;
 * @return {string}
 */
proto.knowledge_service.FeedbackRequest.prototype.getOriginalAnswer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.FeedbackRequest} returns this
 */
proto.knowledge_service.FeedbackRequest.prototype.setOriginalAnswer = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string feedback_type = 3;
 * @return {string}
 */
proto.knowledge_service.FeedbackRequest.prototype.getFeedbackType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.FeedbackRequest} returns this
 */
proto.knowledge_service.FeedbackRequest.prototype.setFeedbackType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string corrected_answer = 4;
 * @return {string}
 */
proto.knowledge_service.FeedbackRequest.prototype.getCorrectedAnswer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.FeedbackRequest} returns this
 */
proto.knowledge_service.FeedbackRequest.prototype.setCorrectedAnswer = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string feedback_text = 5;
 * @return {string}
 */
proto.knowledge_service.FeedbackRequest.prototype.getFeedbackText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.FeedbackRequest} returns this
 */
proto.knowledge_service.FeedbackRequest.prototype.setFeedbackText = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated SourceDocument source_documents = 6;
 * @return {!Array<!proto.knowledge_service.SourceDocument>}
 */
proto.knowledge_service.FeedbackRequest.prototype.getSourceDocumentsList = function() {
  return /** @type{!Array<!proto.knowledge_service.SourceDocument>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.knowledge_service.SourceDocument, 6));
};


/**
 * @param {!Array<!proto.knowledge_service.SourceDocument>} value
 * @return {!proto.knowledge_service.FeedbackRequest} returns this
*/
proto.knowledge_service.FeedbackRequest.prototype.setSourceDocumentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.knowledge_service.SourceDocument=} opt_value
 * @param {number=} opt_index
 * @return {!proto.knowledge_service.SourceDocument}
 */
proto.knowledge_service.FeedbackRequest.prototype.addSourceDocuments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.knowledge_service.SourceDocument, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.knowledge_service.FeedbackRequest} returns this
 */
proto.knowledge_service.FeedbackRequest.prototype.clearSourceDocumentsList = function() {
  return this.setSourceDocumentsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.FeedbackResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.FeedbackResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.FeedbackResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.FeedbackResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    feedbackId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    success: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    errorMessage: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.FeedbackResponse}
 */
proto.knowledge_service.FeedbackResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.FeedbackResponse;
  return proto.knowledge_service.FeedbackResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.FeedbackResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.FeedbackResponse}
 */
proto.knowledge_service.FeedbackResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFeedbackId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.FeedbackResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.FeedbackResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.FeedbackResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.FeedbackResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeedbackId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 feedback_id = 1;
 * @return {number}
 */
proto.knowledge_service.FeedbackResponse.prototype.getFeedbackId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.knowledge_service.FeedbackResponse} returns this
 */
proto.knowledge_service.FeedbackResponse.prototype.setFeedbackId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool success = 2;
 * @return {boolean}
 */
proto.knowledge_service.FeedbackResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.knowledge_service.FeedbackResponse} returns this
 */
proto.knowledge_service.FeedbackResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string error_message = 3;
 * @return {string}
 */
proto.knowledge_service.FeedbackResponse.prototype.getErrorMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.FeedbackResponse} returns this
 */
proto.knowledge_service.FeedbackResponse.prototype.setErrorMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.FeedbackHistoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.FeedbackHistoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.FeedbackHistoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.FeedbackHistoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    question: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.FeedbackHistoryRequest}
 */
proto.knowledge_service.FeedbackHistoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.FeedbackHistoryRequest;
  return proto.knowledge_service.FeedbackHistoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.FeedbackHistoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.FeedbackHistoryRequest}
 */
proto.knowledge_service.FeedbackHistoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.FeedbackHistoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.FeedbackHistoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.FeedbackHistoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.FeedbackHistoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string question = 1;
 * @return {string}
 */
proto.knowledge_service.FeedbackHistoryRequest.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.FeedbackHistoryRequest} returns this
 */
proto.knowledge_service.FeedbackHistoryRequest.prototype.setQuestion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.knowledge_service.FeedbackHistoryResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.FeedbackHistoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.FeedbackHistoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.FeedbackHistoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.FeedbackHistoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordsList: jspb.Message.toObjectList(msg.getRecordsList(),
    proto.knowledge_service.FeedbackRecord.toObject, includeInstance),
    success: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    errorMessage: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.FeedbackHistoryResponse}
 */
proto.knowledge_service.FeedbackHistoryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.FeedbackHistoryResponse;
  return proto.knowledge_service.FeedbackHistoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.FeedbackHistoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.FeedbackHistoryResponse}
 */
proto.knowledge_service.FeedbackHistoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.knowledge_service.FeedbackRecord;
      reader.readMessage(value,proto.knowledge_service.FeedbackRecord.deserializeBinaryFromReader);
      msg.addRecords(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.FeedbackHistoryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.FeedbackHistoryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.FeedbackHistoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.FeedbackHistoryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.knowledge_service.FeedbackRecord.serializeBinaryToWriter
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * repeated FeedbackRecord records = 1;
 * @return {!Array<!proto.knowledge_service.FeedbackRecord>}
 */
proto.knowledge_service.FeedbackHistoryResponse.prototype.getRecordsList = function() {
  return /** @type{!Array<!proto.knowledge_service.FeedbackRecord>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.knowledge_service.FeedbackRecord, 1));
};


/**
 * @param {!Array<!proto.knowledge_service.FeedbackRecord>} value
 * @return {!proto.knowledge_service.FeedbackHistoryResponse} returns this
*/
proto.knowledge_service.FeedbackHistoryResponse.prototype.setRecordsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.knowledge_service.FeedbackRecord=} opt_value
 * @param {number=} opt_index
 * @return {!proto.knowledge_service.FeedbackRecord}
 */
proto.knowledge_service.FeedbackHistoryResponse.prototype.addRecords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.knowledge_service.FeedbackRecord, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.knowledge_service.FeedbackHistoryResponse} returns this
 */
proto.knowledge_service.FeedbackHistoryResponse.prototype.clearRecordsList = function() {
  return this.setRecordsList([]);
};


/**
 * optional bool success = 2;
 * @return {boolean}
 */
proto.knowledge_service.FeedbackHistoryResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.knowledge_service.FeedbackHistoryResponse} returns this
 */
proto.knowledge_service.FeedbackHistoryResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string error_message = 3;
 * @return {string}
 */
proto.knowledge_service.FeedbackHistoryResponse.prototype.getErrorMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.FeedbackHistoryResponse} returns this
 */
proto.knowledge_service.FeedbackHistoryResponse.prototype.setErrorMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.knowledge_service.FeedbackRecord.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.FeedbackRecord.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.FeedbackRecord.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.FeedbackRecord} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.FeedbackRecord.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    question: jspb.Message.getFieldWithDefault(msg, 2, ""),
    originalAnswer: jspb.Message.getFieldWithDefault(msg, 3, ""),
    userFeedback: jspb.Message.getFieldWithDefault(msg, 4, ""),
    correctedAnswer: jspb.Message.getFieldWithDefault(msg, 5, ""),
    feedbackText: jspb.Message.getFieldWithDefault(msg, 6, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 7, ""),
    questionHash: jspb.Message.getFieldWithDefault(msg, 8, ""),
    sourceDocumentsList: jspb.Message.toObjectList(msg.getSourceDocumentsList(),
    proto.knowledge_service.SourceDocument.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.FeedbackRecord}
 */
proto.knowledge_service.FeedbackRecord.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.FeedbackRecord;
  return proto.knowledge_service.FeedbackRecord.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.FeedbackRecord} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.FeedbackRecord}
 */
proto.knowledge_service.FeedbackRecord.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginalAnswer(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserFeedback(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCorrectedAnswer(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeedbackText(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestionHash(value);
      break;
    case 9:
      var value = new proto.knowledge_service.SourceDocument;
      reader.readMessage(value,proto.knowledge_service.SourceDocument.deserializeBinaryFromReader);
      msg.addSourceDocuments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.FeedbackRecord.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.FeedbackRecord.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.FeedbackRecord} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.FeedbackRecord.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOriginalAnswer();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUserFeedback();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCorrectedAnswer();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFeedbackText();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getQuestionHash();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getSourceDocumentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.knowledge_service.SourceDocument.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.knowledge_service.FeedbackRecord.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.knowledge_service.FeedbackRecord} returns this
 */
proto.knowledge_service.FeedbackRecord.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string question = 2;
 * @return {string}
 */
proto.knowledge_service.FeedbackRecord.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.FeedbackRecord} returns this
 */
proto.knowledge_service.FeedbackRecord.prototype.setQuestion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string original_answer = 3;
 * @return {string}
 */
proto.knowledge_service.FeedbackRecord.prototype.getOriginalAnswer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.FeedbackRecord} returns this
 */
proto.knowledge_service.FeedbackRecord.prototype.setOriginalAnswer = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string user_feedback = 4;
 * @return {string}
 */
proto.knowledge_service.FeedbackRecord.prototype.getUserFeedback = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.FeedbackRecord} returns this
 */
proto.knowledge_service.FeedbackRecord.prototype.setUserFeedback = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string corrected_answer = 5;
 * @return {string}
 */
proto.knowledge_service.FeedbackRecord.prototype.getCorrectedAnswer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.FeedbackRecord} returns this
 */
proto.knowledge_service.FeedbackRecord.prototype.setCorrectedAnswer = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string feedback_text = 6;
 * @return {string}
 */
proto.knowledge_service.FeedbackRecord.prototype.getFeedbackText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.FeedbackRecord} returns this
 */
proto.knowledge_service.FeedbackRecord.prototype.setFeedbackText = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string timestamp = 7;
 * @return {string}
 */
proto.knowledge_service.FeedbackRecord.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.FeedbackRecord} returns this
 */
proto.knowledge_service.FeedbackRecord.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string question_hash = 8;
 * @return {string}
 */
proto.knowledge_service.FeedbackRecord.prototype.getQuestionHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.FeedbackRecord} returns this
 */
proto.knowledge_service.FeedbackRecord.prototype.setQuestionHash = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * repeated SourceDocument source_documents = 9;
 * @return {!Array<!proto.knowledge_service.SourceDocument>}
 */
proto.knowledge_service.FeedbackRecord.prototype.getSourceDocumentsList = function() {
  return /** @type{!Array<!proto.knowledge_service.SourceDocument>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.knowledge_service.SourceDocument, 9));
};


/**
 * @param {!Array<!proto.knowledge_service.SourceDocument>} value
 * @return {!proto.knowledge_service.FeedbackRecord} returns this
*/
proto.knowledge_service.FeedbackRecord.prototype.setSourceDocumentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.knowledge_service.SourceDocument=} opt_value
 * @param {number=} opt_index
 * @return {!proto.knowledge_service.SourceDocument}
 */
proto.knowledge_service.FeedbackRecord.prototype.addSourceDocuments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.knowledge_service.SourceDocument, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.knowledge_service.FeedbackRecord} returns this
 */
proto.knowledge_service.FeedbackRecord.prototype.clearSourceDocumentsList = function() {
  return this.setSourceDocumentsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.StatsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.StatsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.StatsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.StatsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.StatsRequest}
 */
proto.knowledge_service.StatsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.StatsRequest;
  return proto.knowledge_service.StatsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.StatsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.StatsRequest}
 */
proto.knowledge_service.StatsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.StatsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.StatsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.StatsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.StatsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.StatsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.StatsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.StatsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.StatsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    knowledgeBase: (f = msg.getKnowledgeBase()) && proto.knowledge_service.KnowledgeBaseStats.toObject(includeInstance, f),
    feedbackSystem: (f = msg.getFeedbackSystem()) && proto.knowledge_service.FeedbackStats.toObject(includeInstance, f),
    systemConfig: (f = msg.getSystemConfig()) && proto.knowledge_service.SystemConfig.toObject(includeInstance, f),
    success: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    errorMessage: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.StatsResponse}
 */
proto.knowledge_service.StatsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.StatsResponse;
  return proto.knowledge_service.StatsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.StatsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.StatsResponse}
 */
proto.knowledge_service.StatsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.knowledge_service.KnowledgeBaseStats;
      reader.readMessage(value,proto.knowledge_service.KnowledgeBaseStats.deserializeBinaryFromReader);
      msg.setKnowledgeBase(value);
      break;
    case 2:
      var value = new proto.knowledge_service.FeedbackStats;
      reader.readMessage(value,proto.knowledge_service.FeedbackStats.deserializeBinaryFromReader);
      msg.setFeedbackSystem(value);
      break;
    case 3:
      var value = new proto.knowledge_service.SystemConfig;
      reader.readMessage(value,proto.knowledge_service.SystemConfig.deserializeBinaryFromReader);
      msg.setSystemConfig(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.StatsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.StatsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.StatsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.StatsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKnowledgeBase();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.knowledge_service.KnowledgeBaseStats.serializeBinaryToWriter
    );
  }
  f = message.getFeedbackSystem();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.knowledge_service.FeedbackStats.serializeBinaryToWriter
    );
  }
  f = message.getSystemConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.knowledge_service.SystemConfig.serializeBinaryToWriter
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional KnowledgeBaseStats knowledge_base = 1;
 * @return {?proto.knowledge_service.KnowledgeBaseStats}
 */
proto.knowledge_service.StatsResponse.prototype.getKnowledgeBase = function() {
  return /** @type{?proto.knowledge_service.KnowledgeBaseStats} */ (
    jspb.Message.getWrapperField(this, proto.knowledge_service.KnowledgeBaseStats, 1));
};


/**
 * @param {?proto.knowledge_service.KnowledgeBaseStats|undefined} value
 * @return {!proto.knowledge_service.StatsResponse} returns this
*/
proto.knowledge_service.StatsResponse.prototype.setKnowledgeBase = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.knowledge_service.StatsResponse} returns this
 */
proto.knowledge_service.StatsResponse.prototype.clearKnowledgeBase = function() {
  return this.setKnowledgeBase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.knowledge_service.StatsResponse.prototype.hasKnowledgeBase = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FeedbackStats feedback_system = 2;
 * @return {?proto.knowledge_service.FeedbackStats}
 */
proto.knowledge_service.StatsResponse.prototype.getFeedbackSystem = function() {
  return /** @type{?proto.knowledge_service.FeedbackStats} */ (
    jspb.Message.getWrapperField(this, proto.knowledge_service.FeedbackStats, 2));
};


/**
 * @param {?proto.knowledge_service.FeedbackStats|undefined} value
 * @return {!proto.knowledge_service.StatsResponse} returns this
*/
proto.knowledge_service.StatsResponse.prototype.setFeedbackSystem = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.knowledge_service.StatsResponse} returns this
 */
proto.knowledge_service.StatsResponse.prototype.clearFeedbackSystem = function() {
  return this.setFeedbackSystem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.knowledge_service.StatsResponse.prototype.hasFeedbackSystem = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SystemConfig system_config = 3;
 * @return {?proto.knowledge_service.SystemConfig}
 */
proto.knowledge_service.StatsResponse.prototype.getSystemConfig = function() {
  return /** @type{?proto.knowledge_service.SystemConfig} */ (
    jspb.Message.getWrapperField(this, proto.knowledge_service.SystemConfig, 3));
};


/**
 * @param {?proto.knowledge_service.SystemConfig|undefined} value
 * @return {!proto.knowledge_service.StatsResponse} returns this
*/
proto.knowledge_service.StatsResponse.prototype.setSystemConfig = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.knowledge_service.StatsResponse} returns this
 */
proto.knowledge_service.StatsResponse.prototype.clearSystemConfig = function() {
  return this.setSystemConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.knowledge_service.StatsResponse.prototype.hasSystemConfig = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool success = 4;
 * @return {boolean}
 */
proto.knowledge_service.StatsResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.knowledge_service.StatsResponse} returns this
 */
proto.knowledge_service.StatsResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string error_message = 5;
 * @return {string}
 */
proto.knowledge_service.StatsResponse.prototype.getErrorMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.StatsResponse} returns this
 */
proto.knowledge_service.StatsResponse.prototype.setErrorMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.KnowledgeBaseStats.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.KnowledgeBaseStats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.KnowledgeBaseStats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.KnowledgeBaseStats.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalDocuments: jspb.Message.getFieldWithDefault(msg, 1, 0),
    totalChunks: jspb.Message.getFieldWithDefault(msg, 2, 0),
    vectorStorePath: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.KnowledgeBaseStats}
 */
proto.knowledge_service.KnowledgeBaseStats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.KnowledgeBaseStats;
  return proto.knowledge_service.KnowledgeBaseStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.KnowledgeBaseStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.KnowledgeBaseStats}
 */
proto.knowledge_service.KnowledgeBaseStats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalDocuments(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalChunks(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVectorStorePath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.KnowledgeBaseStats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.KnowledgeBaseStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.KnowledgeBaseStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.KnowledgeBaseStats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalDocuments();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTotalChunks();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getVectorStorePath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 total_documents = 1;
 * @return {number}
 */
proto.knowledge_service.KnowledgeBaseStats.prototype.getTotalDocuments = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.knowledge_service.KnowledgeBaseStats} returns this
 */
proto.knowledge_service.KnowledgeBaseStats.prototype.setTotalDocuments = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 total_chunks = 2;
 * @return {number}
 */
proto.knowledge_service.KnowledgeBaseStats.prototype.getTotalChunks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.knowledge_service.KnowledgeBaseStats} returns this
 */
proto.knowledge_service.KnowledgeBaseStats.prototype.setTotalChunks = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string vector_store_path = 3;
 * @return {string}
 */
proto.knowledge_service.KnowledgeBaseStats.prototype.getVectorStorePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.KnowledgeBaseStats} returns this
 */
proto.knowledge_service.KnowledgeBaseStats.prototype.setVectorStorePath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.FeedbackStats.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.FeedbackStats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.FeedbackStats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.FeedbackStats.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalFeedback: jspb.Message.getFieldWithDefault(msg, 1, 0),
    positiveFeedback: jspb.Message.getFieldWithDefault(msg, 2, 0),
    negativeFeedback: jspb.Message.getFieldWithDefault(msg, 3, 0),
    correctedFeedback: jspb.Message.getFieldWithDefault(msg, 4, 0),
    improvedAnswers: jspb.Message.getFieldWithDefault(msg, 5, 0),
    satisfactionRate: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.FeedbackStats}
 */
proto.knowledge_service.FeedbackStats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.FeedbackStats;
  return proto.knowledge_service.FeedbackStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.FeedbackStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.FeedbackStats}
 */
proto.knowledge_service.FeedbackStats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalFeedback(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPositiveFeedback(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNegativeFeedback(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCorrectedFeedback(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setImprovedAnswers(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSatisfactionRate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.FeedbackStats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.FeedbackStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.FeedbackStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.FeedbackStats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalFeedback();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPositiveFeedback();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getNegativeFeedback();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getCorrectedFeedback();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getImprovedAnswers();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getSatisfactionRate();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
};


/**
 * optional int32 total_feedback = 1;
 * @return {number}
 */
proto.knowledge_service.FeedbackStats.prototype.getTotalFeedback = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.knowledge_service.FeedbackStats} returns this
 */
proto.knowledge_service.FeedbackStats.prototype.setTotalFeedback = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 positive_feedback = 2;
 * @return {number}
 */
proto.knowledge_service.FeedbackStats.prototype.getPositiveFeedback = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.knowledge_service.FeedbackStats} returns this
 */
proto.knowledge_service.FeedbackStats.prototype.setPositiveFeedback = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 negative_feedback = 3;
 * @return {number}
 */
proto.knowledge_service.FeedbackStats.prototype.getNegativeFeedback = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.knowledge_service.FeedbackStats} returns this
 */
proto.knowledge_service.FeedbackStats.prototype.setNegativeFeedback = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 corrected_feedback = 4;
 * @return {number}
 */
proto.knowledge_service.FeedbackStats.prototype.getCorrectedFeedback = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.knowledge_service.FeedbackStats} returns this
 */
proto.knowledge_service.FeedbackStats.prototype.setCorrectedFeedback = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 improved_answers = 5;
 * @return {number}
 */
proto.knowledge_service.FeedbackStats.prototype.getImprovedAnswers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.knowledge_service.FeedbackStats} returns this
 */
proto.knowledge_service.FeedbackStats.prototype.setImprovedAnswers = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional double satisfaction_rate = 6;
 * @return {number}
 */
proto.knowledge_service.FeedbackStats.prototype.getSatisfactionRate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.knowledge_service.FeedbackStats} returns this
 */
proto.knowledge_service.FeedbackStats.prototype.setSatisfactionRate = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.SystemConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.SystemConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.SystemConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.SystemConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    feedbackLearningEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    confidenceThreshold: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    similarityThreshold: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    feedbackDbPath: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.SystemConfig}
 */
proto.knowledge_service.SystemConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.SystemConfig;
  return proto.knowledge_service.SystemConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.SystemConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.SystemConfig}
 */
proto.knowledge_service.SystemConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFeedbackLearningEnabled(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setConfidenceThreshold(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSimilarityThreshold(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeedbackDbPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.SystemConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.SystemConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.SystemConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.SystemConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeedbackLearningEnabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getConfidenceThreshold();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getSimilarityThreshold();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getFeedbackDbPath();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional bool feedback_learning_enabled = 1;
 * @return {boolean}
 */
proto.knowledge_service.SystemConfig.prototype.getFeedbackLearningEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.knowledge_service.SystemConfig} returns this
 */
proto.knowledge_service.SystemConfig.prototype.setFeedbackLearningEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional double confidence_threshold = 2;
 * @return {number}
 */
proto.knowledge_service.SystemConfig.prototype.getConfidenceThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.knowledge_service.SystemConfig} returns this
 */
proto.knowledge_service.SystemConfig.prototype.setConfidenceThreshold = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double similarity_threshold = 3;
 * @return {number}
 */
proto.knowledge_service.SystemConfig.prototype.getSimilarityThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.knowledge_service.SystemConfig} returns this
 */
proto.knowledge_service.SystemConfig.prototype.setSimilarityThreshold = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional string feedback_db_path = 4;
 * @return {string}
 */
proto.knowledge_service.SystemConfig.prototype.getFeedbackDbPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.SystemConfig} returns this
 */
proto.knowledge_service.SystemConfig.prototype.setFeedbackDbPath = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.SearchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.SearchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.SearchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.SearchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: jspb.Message.getFieldWithDefault(msg, 1, ""),
    k: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.SearchRequest}
 */
proto.knowledge_service.SearchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.SearchRequest;
  return proto.knowledge_service.SearchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.SearchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.SearchRequest}
 */
proto.knowledge_service.SearchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setK(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.SearchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.SearchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.SearchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.SearchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getK();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string query = 1;
 * @return {string}
 */
proto.knowledge_service.SearchRequest.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.SearchRequest} returns this
 */
proto.knowledge_service.SearchRequest.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 k = 2;
 * @return {number}
 */
proto.knowledge_service.SearchRequest.prototype.getK = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.knowledge_service.SearchRequest} returns this
 */
proto.knowledge_service.SearchRequest.prototype.setK = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.knowledge_service.SearchResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.SearchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.SearchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.SearchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.SearchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.knowledge_service.SearchResult.toObject, includeInstance),
    success: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    errorMessage: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.SearchResponse}
 */
proto.knowledge_service.SearchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.SearchResponse;
  return proto.knowledge_service.SearchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.SearchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.SearchResponse}
 */
proto.knowledge_service.SearchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.knowledge_service.SearchResult;
      reader.readMessage(value,proto.knowledge_service.SearchResult.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.SearchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.SearchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.SearchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.SearchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.knowledge_service.SearchResult.serializeBinaryToWriter
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * repeated SearchResult results = 1;
 * @return {!Array<!proto.knowledge_service.SearchResult>}
 */
proto.knowledge_service.SearchResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.knowledge_service.SearchResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.knowledge_service.SearchResult, 1));
};


/**
 * @param {!Array<!proto.knowledge_service.SearchResult>} value
 * @return {!proto.knowledge_service.SearchResponse} returns this
*/
proto.knowledge_service.SearchResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.knowledge_service.SearchResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.knowledge_service.SearchResult}
 */
proto.knowledge_service.SearchResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.knowledge_service.SearchResult, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.knowledge_service.SearchResponse} returns this
 */
proto.knowledge_service.SearchResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};


/**
 * optional bool success = 2;
 * @return {boolean}
 */
proto.knowledge_service.SearchResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.knowledge_service.SearchResponse} returns this
 */
proto.knowledge_service.SearchResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string error_message = 3;
 * @return {string}
 */
proto.knowledge_service.SearchResponse.prototype.getErrorMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.SearchResponse} returns this
 */
proto.knowledge_service.SearchResponse.prototype.setErrorMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.SearchResult.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.SearchResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.SearchResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.SearchResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    content: jspb.Message.getFieldWithDefault(msg, 1, ""),
    score: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.SearchResult}
 */
proto.knowledge_service.SearchResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.SearchResult;
  return proto.knowledge_service.SearchResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.SearchResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.SearchResult}
 */
proto.knowledge_service.SearchResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setScore(value);
      break;
    case 3:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.SearchResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.SearchResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.SearchResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.SearchResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getScore();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string content = 1;
 * @return {string}
 */
proto.knowledge_service.SearchResult.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.SearchResult} returns this
 */
proto.knowledge_service.SearchResult.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double score = 2;
 * @return {number}
 */
proto.knowledge_service.SearchResult.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.knowledge_service.SearchResult} returns this
 */
proto.knowledge_service.SearchResult.prototype.setScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * map<string, string> metadata = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.knowledge_service.SearchResult.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.knowledge_service.SearchResult} returns this
 */
proto.knowledge_service.SearchResult.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.HealthCheckRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.HealthCheckRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.HealthCheckRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.HealthCheckRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.HealthCheckRequest}
 */
proto.knowledge_service.HealthCheckRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.HealthCheckRequest;
  return proto.knowledge_service.HealthCheckRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.HealthCheckRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.HealthCheckRequest}
 */
proto.knowledge_service.HealthCheckRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.HealthCheckRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.HealthCheckRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.HealthCheckRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.HealthCheckRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.HealthCheckResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.HealthCheckResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.HealthCheckResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.HealthCheckResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    healthy: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    status: jspb.Message.getFieldWithDefault(msg, 2, ""),
    version: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.HealthCheckResponse}
 */
proto.knowledge_service.HealthCheckResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.HealthCheckResponse;
  return proto.knowledge_service.HealthCheckResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.HealthCheckResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.HealthCheckResponse}
 */
proto.knowledge_service.HealthCheckResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHealthy(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.HealthCheckResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.HealthCheckResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.HealthCheckResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.HealthCheckResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHealthy();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional bool healthy = 1;
 * @return {boolean}
 */
proto.knowledge_service.HealthCheckResponse.prototype.getHealthy = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.knowledge_service.HealthCheckResponse} returns this
 */
proto.knowledge_service.HealthCheckResponse.prototype.setHealthy = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.knowledge_service.HealthCheckResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.HealthCheckResponse} returns this
 */
proto.knowledge_service.HealthCheckResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string version = 3;
 * @return {string}
 */
proto.knowledge_service.HealthCheckResponse.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.HealthCheckResponse} returns this
 */
proto.knowledge_service.HealthCheckResponse.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.EmailVerificationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.EmailVerificationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.EmailVerificationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.EmailVerificationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.EmailVerificationRequest}
 */
proto.knowledge_service.EmailVerificationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.EmailVerificationRequest;
  return proto.knowledge_service.EmailVerificationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.EmailVerificationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.EmailVerificationRequest}
 */
proto.knowledge_service.EmailVerificationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.EmailVerificationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.EmailVerificationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.EmailVerificationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.EmailVerificationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.knowledge_service.EmailVerificationRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.EmailVerificationRequest} returns this
 */
proto.knowledge_service.EmailVerificationRequest.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.EmailVerificationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.EmailVerificationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.EmailVerificationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.EmailVerificationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    isValid: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    userId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    success: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    errorMessage: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.EmailVerificationResponse}
 */
proto.knowledge_service.EmailVerificationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.EmailVerificationResponse;
  return proto.knowledge_service.EmailVerificationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.EmailVerificationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.EmailVerificationResponse}
 */
proto.knowledge_service.EmailVerificationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsValid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.EmailVerificationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.EmailVerificationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.EmailVerificationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.EmailVerificationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsValid();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional bool is_valid = 1;
 * @return {boolean}
 */
proto.knowledge_service.EmailVerificationResponse.prototype.getIsValid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.knowledge_service.EmailVerificationResponse} returns this
 */
proto.knowledge_service.EmailVerificationResponse.prototype.setIsValid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.knowledge_service.EmailVerificationResponse.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.EmailVerificationResponse} returns this
 */
proto.knowledge_service.EmailVerificationResponse.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool success = 3;
 * @return {boolean}
 */
proto.knowledge_service.EmailVerificationResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.knowledge_service.EmailVerificationResponse} returns this
 */
proto.knowledge_service.EmailVerificationResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string error_message = 4;
 * @return {string}
 */
proto.knowledge_service.EmailVerificationResponse.prototype.getErrorMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.EmailVerificationResponse} returns this
 */
proto.knowledge_service.EmailVerificationResponse.prototype.setErrorMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.knowledge_service.EmailChatRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.knowledge_service.EmailChatRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.knowledge_service.EmailChatRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.EmailChatRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, ""),
    question: jspb.Message.getFieldWithDefault(msg, 2, ""),
    conversationId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    useFeedback: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    useReranking: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    topK: jspb.Message.getFieldWithDefault(msg, 6, 0),
    similarityThreshold: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    systemConfig: (f = msg.getSystemConfig()) && proto.knowledge_service.SystemConfig.toObject(includeInstance, f),
    maxHistoryTurns: jspb.Message.getFieldWithDefault(msg, 9, 0),
    conversationTitle: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.knowledge_service.EmailChatRequest}
 */
proto.knowledge_service.EmailChatRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.knowledge_service.EmailChatRequest;
  return proto.knowledge_service.EmailChatRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.knowledge_service.EmailChatRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.knowledge_service.EmailChatRequest}
 */
proto.knowledge_service.EmailChatRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setConversationId(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseFeedback(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseReranking(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTopK(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSimilarityThreshold(value);
      break;
    case 8:
      var value = new proto.knowledge_service.SystemConfig;
      reader.readMessage(value,proto.knowledge_service.SystemConfig.deserializeBinaryFromReader);
      msg.setSystemConfig(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxHistoryTurns(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setConversationTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.knowledge_service.EmailChatRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.knowledge_service.EmailChatRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.knowledge_service.EmailChatRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.knowledge_service.EmailChatRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getConversationId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUseFeedback();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getUseReranking();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getTopK();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getSimilarityThreshold();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getSystemConfig();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.knowledge_service.SystemConfig.serializeBinaryToWriter
    );
  }
  f = message.getMaxHistoryTurns();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getConversationTitle();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.knowledge_service.EmailChatRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.EmailChatRequest} returns this
 */
proto.knowledge_service.EmailChatRequest.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string question = 2;
 * @return {string}
 */
proto.knowledge_service.EmailChatRequest.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.EmailChatRequest} returns this
 */
proto.knowledge_service.EmailChatRequest.prototype.setQuestion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string conversation_id = 3;
 * @return {string}
 */
proto.knowledge_service.EmailChatRequest.prototype.getConversationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.EmailChatRequest} returns this
 */
proto.knowledge_service.EmailChatRequest.prototype.setConversationId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool use_feedback = 4;
 * @return {boolean}
 */
proto.knowledge_service.EmailChatRequest.prototype.getUseFeedback = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.knowledge_service.EmailChatRequest} returns this
 */
proto.knowledge_service.EmailChatRequest.prototype.setUseFeedback = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool use_reranking = 5;
 * @return {boolean}
 */
proto.knowledge_service.EmailChatRequest.prototype.getUseReranking = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.knowledge_service.EmailChatRequest} returns this
 */
proto.knowledge_service.EmailChatRequest.prototype.setUseReranking = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional int32 top_k = 6;
 * @return {number}
 */
proto.knowledge_service.EmailChatRequest.prototype.getTopK = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.knowledge_service.EmailChatRequest} returns this
 */
proto.knowledge_service.EmailChatRequest.prototype.setTopK = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional float similarity_threshold = 7;
 * @return {number}
 */
proto.knowledge_service.EmailChatRequest.prototype.getSimilarityThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.knowledge_service.EmailChatRequest} returns this
 */
proto.knowledge_service.EmailChatRequest.prototype.setSimilarityThreshold = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional SystemConfig system_config = 8;
 * @return {?proto.knowledge_service.SystemConfig}
 */
proto.knowledge_service.EmailChatRequest.prototype.getSystemConfig = function() {
  return /** @type{?proto.knowledge_service.SystemConfig} */ (
    jspb.Message.getWrapperField(this, proto.knowledge_service.SystemConfig, 8));
};


/**
 * @param {?proto.knowledge_service.SystemConfig|undefined} value
 * @return {!proto.knowledge_service.EmailChatRequest} returns this
*/
proto.knowledge_service.EmailChatRequest.prototype.setSystemConfig = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.knowledge_service.EmailChatRequest} returns this
 */
proto.knowledge_service.EmailChatRequest.prototype.clearSystemConfig = function() {
  return this.setSystemConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.knowledge_service.EmailChatRequest.prototype.hasSystemConfig = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int32 max_history_turns = 9;
 * @return {number}
 */
proto.knowledge_service.EmailChatRequest.prototype.getMaxHistoryTurns = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.knowledge_service.EmailChatRequest} returns this
 */
proto.knowledge_service.EmailChatRequest.prototype.setMaxHistoryTurns = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string conversation_title = 10;
 * @return {string}
 */
proto.knowledge_service.EmailChatRequest.prototype.getConversationTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.knowledge_service.EmailChatRequest} returns this
 */
proto.knowledge_service.EmailChatRequest.prototype.setConversationTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


goog.object.extend(exports, proto.knowledge_service);
